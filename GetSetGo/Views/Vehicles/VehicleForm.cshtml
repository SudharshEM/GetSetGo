@model GetSetGo.ViewModels.VehicleFormViewModel
@{
    ViewBag.Title = @Model.Title;
}

<h2>@Model.Title</h2>

@using (Html.BeginForm("Save", "Vehicles"))
{
    <div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Vehicle.Name)
            @Html.TextBoxFor(model => model.Vehicle.Name, null, new { @class = "form-control" , autocomplete = "off" })
            @Html.ValidationMessageFor(model => model.Vehicle.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vehicle.VehicleTypeId)
            @Html.DropDownListFor(model => model.Vehicle.VehicleTypeId, new SelectList(Model.VehicleTypes, "Id", "Name"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Vehicle.VehicleTypeId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vehicle.PlateNumber)
            @Html.TextBoxFor(model => model.Vehicle.PlateNumber, null, new { @class = "form-control", autocomplete = "off" })
            @Html.ValidationMessageFor(model => model.Vehicle.PlateNumber, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vehicle.Color)
            @Html.TextBoxFor(model => model.Vehicle.Color, null, new { @class = "form-control", autocomplete = "off" })
            @Html.ValidationMessageFor(model => model.Vehicle.Color, "", new { @class = "text-danger" })
        </div>

        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Vehicle.Id)
        <button type="submit" class="btn">Save</button>

    </div>
}


<p>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</p>


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}



